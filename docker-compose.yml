version: '3.8'

services:
  auth_app:
    build: 
      dockerfile: Dockerfile
    image: auth_app:0.0.0
    container_name: ${ENV_PROJ_NAME}_${ENV_APP_CONT_NAME_AUTH}
    ports:
      - ${ENV_APP_PORT_AUTH}:${APP_PORT}
    volumes:
      - .:/app
    command: gunicorn backend.services.auth.main:web_app -c backend/services/auth/config/gunicorn.conf.py
    restart: unless-stopped
    networks:
      - external-proxy
      - internal-proxy
  
  fine_app:
    build: 
      dockerfile: Dockerfile
    image: fine_app:0.0.0
    container_name: ${ENV_PROJ_NAME}_${ENV_APP_CONT_NAME_FINE}
    ports:
      - ${ENV_APP_PORT_FINE}:${APP_PORT}
    volumes:
      - .:/app
    command: gunicorn backend.services.fine.main:web_app -c backend/services/fine/config/gunicorn.conf.py
    restart: unless-stopped
    networks:
      - external-proxy
      - internal-proxy

  auth_mongo:
    image: mongo:6.0
    container_name: ${ENV_PROJ_NAME}_${ENV_MONGO_CONT_NAME_AUTH}
    ports:
      - ${ENV_MONGO_PORT_AUTH}:27017
    volumes:
      - ./data/auth/mongo:/data/db
    restart: always
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
    #   - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}

  fine_mongo:
    image: mongo:6.0
    container_name: ${ENV_PROJ_NAME}_${ENV_MONGO_CONT_NAME_FINE}
    ports:
      - ${ENV_MONGO_PORT_FINE}:27017
    volumes:
      - ./data/fine/mongo:/data/db
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
    #   - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    restart: always

  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    container_name: micro_traefik
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
    labels:
      - "traefik.http.routers.traefik.rule=Host(`localhost.com`)"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./configs/traefik.toml:/etc/traefik/traefik.toml
      - ./logs/:/var/log
    networks:
      - external-proxy
      - internal-proxy
  
  gateway:
    image: quay.io/datawire/ambassador:0.86.1
    command: --port 8080
    volumes:
      - ./configs/ambassador:/ambassador/ambassador-config
    environment:
      - AMBASSADOR_NO_KUBEWATCH=no_kubewatch
    labels:
      - "traefik.http.routers.gateway.rule=Host(`localhost.com`) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.gateway-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.gateway.middlewares=gateway-stripprefix@docker"
      - "traefik.http.routers.gateway.service=gateway"
      - "traefik.http.services.gateway.loadbalancer.server.port=8080"
      - "traefik.docker.network=external-proxy"
    container_name: gateway
    networks:
      - internal-proxy


networks:
  external-proxy:
    external: true
  internal-proxy:
    external: false